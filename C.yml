services:
  minio:
    image: bitnami/minio:2023-debian-11
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio_minio
      MINIO_DEFAULT_BUCKETS: spark-bucket
    container_name: minio
    hostname: minio
    ports:
      - 9000
      - 9001:9001

  postgres:
    image: postgres:${POSTGRES_VERSION}
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: metastore
    container_name: postgres
    hostname: postgres
    ports:
      - 5433:5432
    volumes:
      - ./script/hive-schema-2.3.0.postgres.sql:/docker-entrypoint-initdb.d/hive-schema-2.3.0.postgres.sql
      - ./script/hive-txn-schema-2.3.0.postgres.sql:/docker-entrypoint-initdb.d/hive-txn-schema-2.3.0.postgres.sql

  zookeeper:
    image: zookeeper:${ZOOKEEPER_VERSION}
    ports:
      - 2181
    container_name: zookeeper
    hostname: zookeeper

  metastore:
    image: nekyuubi/kyuubi-playground-metastore:${KYUUBI_VERSION}
    container_name: metastore
services:
  minio:
    image: bitnami/minio:2023-debian-11
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio_minio
      MINIO_DEFAULT_BUCKETS: spark-bucket
    container_name: minio
    hostname: minio
    ports:
      - 9000
      - 9001:9001

  postgres:
    image: postgres:${POSTGRES_VERSION}
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: metastore
    container_name: postgres
    hostname: postgres
    ports:
      - 5433:5432
    volumes:
      - ./script/hive-schema-2.3.0.postgres.sql:/docker-entrypoint-initdb.d/hive-schema-2.3.0.postgres.sql
      - ./script/hive-txn-schema-2.3.0.postgres.sql:/docker-entrypoint-initdb.d/hive-txn-schema-2.3.0.postgres.sql

  zookeeper:
    image: zookeeper:${ZOOKEEPER_VERSION}
    ports:
      - 2181
    container_name: zookeeper
    hostname: zookeeper

  metastore:
    image: nekyuubi/kyuubi-playground-metastore:${KYUUBI_VERSION}
    container_name: metastore
    hostname: metastore
    ports:
      - 9083
    volumes:
      - ./conf/core-site.xml:/etc/hadoop/conf/core-site.xml
      - ./conf/hive-site.xml:/etc/hive/conf/hive-site.xml
    depends_on:
      - postgres

  kyuubi:
    image: nekyuubi/kyuubi-playground-kyuubi:${KYUUBI_VERSION}
    container_name: kyuubi
    hostname: kyuubi
    ports:
      - 4040-4050:4040-4050
      - 10009:10009
      - 10099:10099
    volumes:
      - ./conf/core-site.xml:/etc/hadoop/conf/core-site.xml
      - ./conf/hive-site.xml:/etc/hive/conf/hive-site.xml
      - ./conf/spark-defaults.conf:/etc/spark/conf/spark-defaults.conf
      - ./conf/kyuubi-defaults.conf:/etc/kyuubi/conf/kyuubi-defaults.conf
      - ./conf/kyuubi-log4j2.xml:/etc/kyuubi/conf/log4j2.xml
      - ./script/load-dataset-tpcds-tiny.sql:/opt/load_data/load-dataset-tpcds-tiny.sql
      - ./script/load-dataset-tpch-tiny.sql:/opt/load_data/load-dataset-tpch-tiny.sql
      - ./conf/ranger-spark-audit.xml:/opt/spark/conf/ranger-spark-audit.xml
      - ./conf/ranger-spark-security.xml:/opt/spark/conf/ranger-spark-security.xml
    depends_on:
      - metastore
      - minio
      - zookeeper
      - ranger-admin

  ranger-admin:
    image: apache/ranger-admin:latest
    container_name: ranger-admin
    hostname: ranger-admin
    environment:
      DB_FLAVOR: POSTGRES
      DB_ROOT_USER: postgres
      DB_ROOT_PASSWORD: postgres
      SQL_CONNECTOR_JAR: /opt/ranger/postgresql-jdbc.jar
      DB_HOST: postgres
      DB_PASSWORD: rangeradmin
      RANGER_ADMIN_LOGLEVEL: INFO
      RANGER_ADMIN_PASSWORD: rangeradmin
    ports:
      - 6080:6080
    volumes:
      - ./conf/ranger-admin-site.xml:/etc/ranger/admin/conf/ranger-admin-site.xml
      - ./conf/postgresql-jdbc.jar:/opt/ranger/postgresql-jdbc.jar
    depends_on:
      - postgres

  prometheus:
    image: prom/prometheus:v${PROMETHEUS_VERSION}
    container_name: prometheus
    hostname: prometheus
    ports:
      - 9090:9090
      - 8123:8123
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana-oss:${GRAFANA_VERSION}
    container_name: grafana
    hostname: grafana
    ports:
      - 3000:3000
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    volumes:
      - ./grafana/datasource/prometheus.yaml:/etc/grafana/provisioning/datasources/prometheus.yaml
    depends_on:
      - prometheus
ï¿¼Enter
